[{"title":"python爬虫的简单实现","url":"/2018/09/07/python爬虫的简单实现/","content":"新手嘛，爬虫当然是最简单最容易学的吧~我是这么以为的，学了两天，做了这么个东西~\n网上的都比较喜欢爬这个小说网站http://www.biqugecom.com/ ,试一下咯~\n```\nfrom bs4 import BeautifulSoup\nimport re\nimport requests\nimport sys\nimport time\nimport random\n#目前有效20180907\n#先在D盘建一个叫aaa的文件夹\n\n#全局变量\nyuanshiurl = 'http://www.biqugecom.com/1/'#原始url\nxinurl = ''#新url\nsoupshuming = ''#小说名字\nsoupnext = ''#下一章地址\nopenshuhao = '13503'#书号\nzhangshu = 1#章数\n\n#交互\nprint('请输入想要下载的小说的书号：')\nopenshuhao = input()\nif openshuhao == '':\n     print('未检测到书号，系统将随机抽取')\n     openshuhao = str(random.randint(1,15000))\n     #openshuhao = str('13503')\nprint('下载书号：'+str(openshuhao))\nprint('即将开始下载,请耐心等待...')\n\n#初始化方法\ndef chushihua(shuhao):\n     global soupnext\n     global soupshuming\n     global openshuhao\n     global zhangshu\n     url = yuanshiurl+str(shuhao)+'/'\n     r = requests.get(url)\n     r.encoding = 'gbk'\n     soup = BeautifulSoup(r.text,'html.parser')\n     soupshuming = soup.select('#info h1')[0].text#小说名字\n     soupzuozhe = soup.select('#info p')[0].text#作者名字\n     soupzuihougengxin = soup.select('#info p')[2].text#最后更新时间\n     soupjianjie = soup.select('#intro')[0].text#最后更新时间\n     soupzhengwen = soup.select('dd')[9].next_siblings\n     soupz = ''\n     for zs in soupzhengwen:\n          soupz +=str(zs)\n     soupzw = BeautifulSoup(soupz,'html.parser')\n     zhangshu = len(soupzw.select('dd a'))\n     #写入txt\n     f = open('D:\\\\aaa\\\\'+soupshuming+'.txt','ab+')\n     f.write((str(soupshuming) + '\\r\\n').encode('UTF-8'))\n     f.write((str(soupzuozhe) + '\\r\\n').encode('UTF-8'))\n     f.write((str(soupzuihougengxin) + '\\r\\n').encode('UTF-8'))\n     f.write(('****简介****\\r\\n').encode('UTF-8'))\n     f.write((str(soupjianjie) + '\\r\\n').encode('UTF-8'))\n     f.write(('*************\\r\\n\\r\\n').encode('UTF-8'))\n     f.close()\n     soupnext = soup.select('dd a')[9]['href'].split('/')[3]#第一章地址\n     print('开始下载：'+soupshuming)\n     print('总章数：'+str(zhangshu))\n     print('简介：'+str(soupjianjie))\nchushihua(openshuhao)\n\n#单章下载方法\ndef downloadxs():\n     global soupnext\n     r =  requests.get(xinurl)\n     r.encoding = 'gbk'\n     soup = BeautifulSoup(r.text,'html.parser')\n     soupname = soup.select('.bookname h1')[0].text#章节名称\n     souptext = soup.select('#content')[0]#章节内容\n     for ss in souptext.select(\"script\"):\n          ss.decompose()\n     for ss in souptext.select(\"a\"):\n          ss.decompose()\n     #soupnext = soup.select('#pager_next')[0]['href']#下一章地址\n     soupnext = soup.select('.bottem1 a')[2]['href']#下一章地址\n     souptext = re.sub('\\s+' ,'\\r\\n\\t', souptext.text).strip('\\r\\n')\n     f = open('D:\\\\aaa\\\\'+soupshuming+'.txt','ab+')\n     f.write((str(soupname) + '\\r\\n').encode('UTF-8'))\n     f.write((str(souptext) + '\\r\\n').encode('UTF-8'))\n     f.close()\n\n#拼接url方法\ndef pinjieurl(shuhao):\n     global xinurl\n     xinurl = yuanshiurl+str(shuhao)+'/'+str(soupnext)\npinjieurl(openshuhao)\n\n#下载\ndef main():\n     for i in range(zhangshu):\n          pinjieurl(openshuhao)\n          downloadxs()\n          time.sleep(0.5)\n          print('\\r下载中：'+str(round(((100/zhangshu)*i),2))+'%，已下载：'+str(i+1)+'章', end='')\n          sys.stdout.flush()\nmain()\n\n\n```\n辣鸡爬虫，只能爬这一个网站，不过原理都是相同的吧（雾）。\n","tags":["python"]},{"title":"第一篇博客","url":"/2018/09/06/第一篇博客/","content":"\n这我写的第一篇博客，以前在网上一直是一个伸手党看别人的博客，终于到了自己写博客的时候了，感触蛮多的...虽然之后还是一个伸手党，还是要看别人写的博客，虽然我的博客也没人看...不过记录一下自己的学习生活应该也挺有意思的吧~\n![](http://f.hiphotos.baidu.com/image/pic/item/d043ad4bd11373f067aca6bca90f4bfbfbed0406.jpg)\n顺便试一些东西...\n\n<a href='http://localhost:4000/myself/index.html'>123</a>\n","tags":["闲聊"]},{"title":"Hello World","url":"/2018/09/06/hello-world/","content":"\n![](https://portablehexo.bitmoe.cn/hexopp/hexop.png)\n\n>**本版本仅适用于Win环境**\n>本文关键字： **Hexo绿色版**，**Hexo便携版**，**Hexo配置**，**Hexo**，**U盘**\n\n[Hexo](https://hexo.io/)是一个快速、简洁且高效的博客框架，支持 GitHub Flavored Markdown 的所有功能；具有超快生成速度，让上百个页面在几秒内瞬间完成渲染；还拥有各式各样的插件等等。\n\n但是就像很多教程里面写的那样，搭建 Hexo 本地环境，需要安装 Node.js、Git 以及使用 npm 进行安装和配置。这对于毫无经验的新手来说，是一个很大的挑战。同时，由于这些环境的存在，导致如果需要更换计算机的时候，重新安装配置一个新的Hexo环境，又得花费一些功夫。\n\n所以呢，锵锵，我们整合了一个 Hexo 便携版，来简化本地环境的部署。\n\n####**版本介绍**\n那么所谓的便携版到底是什么？便携版就是将 Hexo 本地环境所需要的各种依赖环境的整合到一起，做成的不需要安装的版本。\n\n本便携版（Release 1.0.0）所包含的软件如下：\n>- Git: 2.7.4\n>- Nodejs: 6.10.1\n>- Npm: 4.4.1\n>- Hexo: 3.2.2\n\n为了便携的需要，不能配置固定的环境变量，所以除此之外还有相应的批处理文件，下文将详细介绍。\n\n####**从零开始，1分钟搭建Hexo写作环境**\n说了这么多，我们这就开始教你如何在1分钟内，从零开始搭建Hexo写作环境！\n\n#####1 注册一个Github帐号\n\n1.1 进入[Github](https://github.com)，并在右边的3个框框中分别填写 用户名、邮箱地址、账户密码，并点击 **`Sign up for Github`**;\n\n![图1.1.1](https://portablehexo.bitmoe.cn/hexopp/hexop2.png)\n\n1.2 进入欢迎页面后，点击**`Finish sign up`**;\n\n![图1.2.1](https://portablehexo.bitmoe.cn/hexopp/hexop3.png)\n\n1.3 进入到这一步之后（**图1.3.1**），先别记着点任何东西，查看你的邮箱，应该会收到如下的邮件（**图1.3.2**），确认你的邮件。否则，你会看到错误页面（**图1.3.3**）。query完毕之后在**图1.3.1**所示的页面，点击**`+ New repository`**;\n\n![图1.3.1](https://portablehexo.bitmoe.cn/hexopp/hexop5.png)\n\n![图1.3.2](https://portablehexo.bitmoe.cn/hexopp/hexop6.png)\n\n![图1.3.3](https://portablehexo.bitmoe.cn/hexopp/hexop7.png)\n\n1.4 请在红框中的 **`Repository name`** 里面输入 **`用户名.github.io`** ( **用户名** 就是你刚刚 **步骤1.1** 中注册的用户名)，然后点击 **`Create repository`**;\n\n![图1.4.1](https://portablehexo.bitmoe.cn/hexopp/hexop8.png)\n\n1.5 至此，Github网页注册的部分完毕\n\n####2 下载HEXO Portable\n\n2.1 访问我们的 [HEXO Portable](https://project.bitmoe.cn/PortableHexo/) 页面，或者 [Github仓库](https://github.com/Bitmoe/PortableHexo) 下载最新的便携版；\n\n2.2 双击得到的自解压文件，解压到你需要安装博客的地方，可以选择硬盘或者U盘；\n\n####3 配置你的环境\n\n3.1 在你的博客的文件夹，你会发现很多批处理文件，我先介绍下各个文件的用途：\n>- 配置基本信息 >> 配置博客的基本环境\n>- 配置Github部署 >> 配置博客的部署\n>- 启动命令行 >> 启动带环境变量的Git-Bash，否则无法使用node、npm、git等命令\n>- 新建文章 >> 新建一篇文章\n>- 渲染并本地测试 >> 生成并本地预览\n>- 渲染并部署 >> 生成并部署到GitHub\n>- 重置配置文件 >> 重置_config.yml\n\n3.2 我们继续进行环境配置，双击**`配置基本信息`**并按顺序输入以下信息：\n>- 主标题：顾名思义\n>- 副标题：顾名思义\n>- 描述：顾名思义\n>- 作者：顾名思义\n>- 网站地址：填写 **用户名.github.io** （此处的用户名为**步骤1.1**中填写的用户名）\n**如果您已经购买了域名，可以参看相关的文章！**\n\n3.3 双击**`配置Github部署`**并按顺序输入以下信息：\n>- Github的用户名：此处的用户名为**步骤1.1**中填写的用户名\n>- Github注册邮箱：此处的注册邮箱为**步骤1.1**中填写的注册邮箱\n\n3.4 输入完毕之后，会进行测试部署，等待屏幕提示**下面将进行部署测试，稍后将有一个openssh的对话框出现，请输入你的github用户密码。**的时候，按回车继续；（此处的用户密码为**步骤1.1**中填写的用户密码）\n\n3.5 然后继续等待，此时屏幕会出现n多行，耐心等待即可；\n\n3.6 等待屏幕提示**请访问 https://用户名.github.io 查看是否部署成功！**的时候，在浏览器中输入**https://用户名.github.io **，理论上可以看到你的Hexo站点！（此处的用户名为**步骤1.1**中填写的用户名）\n\n3.7 至此，你的Hexo环境就配置完成了，这样你的这个Hexo博客文件夹无论移动到哪一台电脑，都能通过**启动命令行**出现的bash命令行，或者其余便捷的批处理文件比如**新建文章**、**渲染并本地测试**、**渲染并部署**进行相应的操作。\n\n3.8 如果你在配置中出错，可以运行**重置配置文件**后，再重复**3.1~3.6步骤**\n\n####4 开始享受纯粹的Hexo写作吧！\n\n####5 备注\n>- 本便携版以及本文均使用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by/4.0/)协议；\n>- 本文所有权归 [QistChan](http://qistchan.com) & [Bitmoe Inc.](https://wwww.bitmoe.com) 所有；\n>- 本便携版由 [Bitmoe Inc.](https://www.bitmoe.com) 维护并提供技术支持；\n>- 需要技术支持可以在[Github仓库](https://github.com/Bitmoe/PortableHexo) 提交**`Issues`**；\n>-  Written with [StackEdit](https://stackedit.io/)."}]